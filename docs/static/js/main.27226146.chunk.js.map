{"version":3,"sources":["components/GifFooter.js","helpers/getGifs.js","components/GifGridItem.js","hooks/useLoadingGif.js","components/GifGrid.js","hooks/useFetchGifs.js","components/AddCategory.js","components/GifHeader.js","GifExpertApp.js","index.js"],"names":["GifFooter","className","src","alt","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","size","GifGridItem","gifData","useState","gif","loaded","state","setstate","event","e","useLoadingGif","imageLoaded","onMouseOver","cardInfoClasses","currentTarget","firstChild","classList","contains","remove","onMouseLeave","add","href","target","rel","onLoad","srcSet","GifGrid","loading","useEffect","then","imgs","useFetchGifs","AddCategory","setCategories","inputValue","setInputValue","handleSubmint","preventDefault","undefined","trim","length","cats","alert","onSubmit","type","placeholder","value","onChange","onClick","GifHeader","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27226146.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const GifFooter = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"d-flex-row align-items-center justify-content-center\">\r\n        <h4 className=\"footer-app\">Designed by UriCode &copy;</h4>\r\n        <img\r\n          className=\"img-footer\"\r\n          src={process.env.PUBLIC_URL + \"helmet.svg\"}\r\n          alt=\"img_footer\"\r\n        />\r\n      </div>\r\n      <p className=\"text-center\">\r\n        <small>\r\n          Este es un proyecto construido con el API de Giphy, todos los Gifs que\r\n          aquÃ­ aparecen son pertenecientes a Giphy.\r\n        </small>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","export const getGifs = async (category) => {\r\n  const api_key = \"ixX8Ljv5kG1WvYK3IzclO118dDKgLqai\";\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=20&api_key=${api_key}`;\r\n  const response = await fetch(url);\r\n  const { data } = await response.json();\r\n\r\n  const gifs = data.map((img) => ({\r\n    id: img.id,\r\n    title: img.title,\r\n    url: img.images?.downsized_medium.url,\r\n    size: img.images?.downsized_medium.size,\r\n  }));\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\nimport { useLoadingGif } from \"../hooks/useLoadingGif\";\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n  const gifData = useLoadingGif(url);\r\n\r\n  const {\r\n    event: imageLoaded,\r\n    data: { gif, loaded },\r\n  } = gifData;\r\n\r\n  const showInformationHandler = (e) => {\r\n    const cardInfo = e.currentTarget.firstChild;\r\n    const cardInfoClasses = cardInfo.classList;\r\n\r\n    if (cardInfoClasses.contains(\"d-none\")) {\r\n      cardInfoClasses.remove(\"d-none\");\r\n    }\r\n  };\r\n\r\n  const hideInformationHandler = (e) => {\r\n    const cardInfo = e.currentTarget.firstChild;\r\n    const cardInfoClasses = cardInfo.classList;\r\n\r\n    if (!cardInfoClasses.contains(\"d-none\")) {\r\n      cardInfoClasses.add(\"d-none\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"d-flex justify-content-center flex-wrap card animate__animated animate__fadeIn n-father\"\r\n      onMouseOver={showInformationHandler}\r\n      onMouseLeave={hideInformationHandler}\r\n    >\r\n      <div className=\"n-child d-none d-flex-row align-items-bottom justify-content-between\">\r\n        <p className=\"text-capitalize text-title card-info\">{title}</p>\r\n        <a\r\n          href={url}\r\n          className=\"btn card-info\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          ðŸ”—\r\n        </a>\r\n      </div>\r\n      <img\r\n        src={url}\r\n        alt={title}\r\n        onLoad={imageLoaded}\r\n        srcSet={loaded ? gif : process.env.PUBLIC_URL + \"loading.gif\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport const useLoadingGif = (url) => {\r\n  const [state, setstate] = useState({\r\n    gif: \"\",\r\n    loaded: false,\r\n  });\r\n\r\n  const imageLoaded = (e) => {\r\n    setstate({\r\n      gif: url,\r\n      loaded: true,\r\n    });\r\n  };\r\n\r\n  return {\r\n    event: imageLoaded,\r\n    data: state,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <div className=\"container text-center\">\r\n      <h3 className=\"text-capitalize\">{category}</h3>\r\n      <hr />\r\n      <br />\r\n      {loading && (\r\n        <div className=\"lds-roller\">\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n      )}\r\n      <div className=\"d-flex flex-wrap justify-content-between\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) =>\r\n      setstate({\r\n        data: imgs,\r\n        loading: false,\r\n      })\r\n    );\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmint = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue !== undefined) {\r\n      if (inputValue.trim().length > 2) {\r\n        setCategories((cats) => [inputValue, ...cats]);\r\n        setInputValue(\"\");\r\n      } else {\r\n        alert(\"No has escrito nada\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"formulario\" onSubmit={handleSubmint}>\r\n        <div className=\"d-flex-row\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Buscar\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n          />\r\n          <button\r\n            className=\"d-flex-row align-items-center btn btn-search\"\r\n            onClick={handleSubmint}\r\n          >\r\n            <p>ðŸ”Ž</p>\r\n          </button>\r\n        </div>\r\n      </form>\r\n      <br />\r\n    </>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { AddCategory } from \"./AddCategory\";\r\n\r\nexport const GifHeader = ({ setCategories }) => {\r\n  return (\r\n    <div className=\"nav d-flex align-items-center\">\r\n      <img\r\n        src=\"https://media.giphy.com/media/3o6gbbuLW76jkt8vIc/giphy.gif\"\r\n        alt=\"img-header\"\r\n      />\r\n      <div className=\"d-flex justify-content-center w-100\">\r\n        <AddCategory setCategories={setCategories} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nGifHeader.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { GifFooter } from \"./components/GifFooter\";\r\n\r\nimport { GifGrid } from \"./components/GifGrid\";\r\nimport { GifHeader } from \"./components/GifHeader\";\r\n\r\nconst GifExpertApp = () => {\r\n  //const categories = [\"Naruto\", \"Dragon Ball\", \"PokÃ©mon\"];\r\n  const [categories, setCategories] = useState([\"DOOM Eternal\"]);\r\n\r\n  //   const handleAdd = (e) => setCategories([...categories, \"Baki\"]);\r\n\r\n  return (\r\n    <>\r\n      <GifHeader setCategories={setCategories} />\r\n      <div>\r\n        {categories.map((category) => (\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n      </div>\r\n      <GifFooter />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExpertApp from \"./GifExpertApp\";\nimport \"./index.css\";\nimport \"animate.css/animate.css\";\nimport \"./css/loader.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}